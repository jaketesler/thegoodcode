#!/bin/bash

# Written by Jake Tesler (8/15/17)
# Version 2 (5/24/19)

MONITOR=false
RESTART=false
STOP=false
START=false
SERVICE=""

SHOULD_EXIT=false
SHOW_USAGE=false
QUIET=false
RELOAD_REQUESTED=false


function printq() {
	if [ "$QUIET" = false ]; then
		echo $@
	fi
}

function usage() {
	echo "usage: srv [-l] [-q] [[-m] [-i] [-r|-s|-S] service]"
}

while getopts ":hm:r:s:S:i:ql" arg; do
	if test "$OPTARG" = "$(eval echo '$'$((OPTIND - 1)))"; then
        OPTIND=$((OPTIND - 1))
    fi

	case $arg in
		m)
			MONITOR=true
			SERVICE="$OPTARG"
			;;
		r)
			RESTART=true
			SERVICE="$OPTARG"
			;;
		s)
			START=true
			SERVICE="$OPTARG"
			;;
		S)
			STOP=true
			SERVICE="$OPTARG"
			;;
		i)
			STATUS=true
			SERVICE="$OPTARG"
			;;
		l)
			RELOAD_REQUESTED=true
			;;
		q)
			QUIET=true
			;;
		h)
			SHOW_USAGE=true
			SHOULD_EXIT=true
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			SHOW_USAGE=true
			SHOULD_EXIT=true
			;;
	esac
done

if [ "$RELOAD_REQUESTED" = true ]; then
	sudo systemctl daemon-reload
	printq "Reloading the systemd manager configuration."
	exit 0
fi

if [ "$SHOW_USAGE"  = true ]; then usage; fi
if [ "$SHOULD_EXIT" = true ]; then exit 0; fi

if [ -z "$SERVICE" ] || test "$SERVICE" = "$(eval echo '$'$((OPTIND - 1)))"; then
    printq "Please provide a service name."
    if [ "$QUIET" = false ]; then usage; fi
    exit 0
fi

SERVICES_LIST=$(systemctl list-unit-files "$SERVICE"* | grep service | awk '{print $1}')
if [ -z $SERVICES_LIST ]; then
	printq "Service $SERVICE could not be found."
	exit 0
fi

for unit in "${SERVICES_LIST[@]}"; do
	if [ "$RESTART" = true ]; then
		START=false
		STOP=false
		printq "Restarting $unit..."
		sudo systemctl restart --no-pager $unit
	fi

	if [ "$STOP" = true ]; then
		printq "Stopping $unit..."
		sudo systemctl stop --no-pager $unit
	fi

	if [ "$START" = true ]; then
		printq "Starting $unit..."
		sudo systemctl start --no-pager $unit
	fi

	if [ "$STATUS" = true ]; then
		# printq "Gathering status for $unit."
		sudo systemctl status --no-pager $unit
	fi
done

if [ "$MONITOR" = true ]; then
	if [ "$STATUS" = true ]; then # when status is printed, truncate number of printed lines
		lines=25
	else
		lines=100
	fi
	sudo journalctl -n $lines -f -u "$SERVICE"
fi



# function srv_cmd()
# {
# 	while getopts hm:r:s:S:i: arg; do
# 		case $arg in
# 			m)
# 				sudo journalctl -n 75 -f -u $OPTARG
# 				;;
# 			r)
# 				sudo systemctl restart $OPTARG
# 				;;
# 			s)
# 				sudo systemctl start $OPTARG
# 				;;
# 			S)
# 				sudo systemctl stop $OPTARG
# 				;;
# 			i)
# 				sudo systemctl status $OPTARG
# 				;;
# 			\?)
# 				echo "Invalid option: -$OPTARG" >&2
# 				;;
# 		esac
# 	done
# }
#
# function _completion_()
# {
# 	SERVICES=$(systemctl list-unit-files -a --no-pager --no-legend | awk '{print $1}')
# 	COMPREPLY+=($SERVICES)
# }
#
# complete -F _completion_ srv_cmd
